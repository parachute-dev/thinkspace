@mixin gradient($baseColor, $toColor) {
    background-color: $baseColor;
    background-image: -moz-linear-gradient($baseColor, $toColor);
    background-image: -webkit-gradient($baseColor, $toColor);
    background-image: linear-gradient($baseColor, $toColor);
}

@mixin animation($animation, $delay, $duration, $timing, $count) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-timing-function: $timing;
    -webkit-animation-iteration-count: $count;
    -webkit-animation-fill-mode: forwards;
    -moz-animation-delay: $delay; 
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-timing-function: $timing;
    -moz-animation-iteration-count: $count;
    -moz-animation-fill-mode: forwards;
    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-timing-function: $timing;
    -o-animation-iteration-count: $count;
    -o-animation-fill-mode: forwards;
    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-timing-function: $timing;
    animation-iteration-count: $count;
    animation-fill-mode: forwards;
}

@mixin transform($transform) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform; 
    transform: $transform;
}

@mixin linear-gradient($angle, $color-stops...) {
    $_angle-with-vendor-prefix: "";
    $_angle: "";

    @if $angle == "to top" or $angle == "bottom" {
        $_angle-with-vendor-prefix: bottom;
        $_angle: to top;
    }
    @else if $angle == "to right" or $angle == "left" {
        $_angle-with-vendor-prefix: left;
        $_angle: to right;
    }
    @else if $angle == "to bottom" or $angle == "top" {
        $_angle-with-vendor-prefix: top;
        $_angle: to bottom;
    }
    @else if $angle == "to left" or $angle == "right" {
        $_angle-with-vendor-prefix: right;
        $_angle: to left;
    }
    @else if $angle == "to top right" or $angle == "bottom left" {
        $_angle-with-vendor-prefix: bottom left;
        $_angle: to top right;
    }
    @else if $angle == "to bottom right" or $angle == "top left" {
        $_angle-with-vendor-prefix: top left;
        $_angle: to bottom right;
    }
    @else if $angle == "to bottom left" or $angle == "top right" {
        $_angle-with-vendor-prefix: top right;
        $_angle: to bottom left;
    }
    @else if $angle == "to top left" or $angle == "bottom right" {
        $_angle-with-vendor-prefix: bottom right;
        $_angle: to top left;
    }
    @else {
        $_angle-with-vendor-prefix: $angle % 360;
        $_angle: (90 - $angle) % 360;
    }

    background: -webkit-linear-gradient($_angle-with-vendor-prefix, $color-stops);
    background: -moz-linear-gradient($_angle-with-vendor-prefix, $color-stops);
    background: -o-linear-gradient($_angle-with-vendor-prefix, $color-stops);
    background: linear-gradient($_angle, $color-stops);
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @-moz-keyframes #{$name} {
        @content;
    }

    @-ms-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

@mixin transition-one($speed) {
    transition: all $speed $transition-one;
}

// Ross' fancy mixins for fancy devs
@mixin remify($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value / 16}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  
  #{$property}: $pxValues; 
  #{$property}: $remValues; 
}

// .test{
  // @include remify(margin, 16, 24, 16, 24);
  // @include remify(font-size, 18);
// }

@mixin font-size($size) {
  @include remify(font-size, $size);
}


@mixin filter($property){
    -webkit-filter: $property; /* Safari 6.0 - 9.0 */
    filter: $property;
}

